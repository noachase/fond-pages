{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u0430\\u043D\\u0430\\u0446\\u0435\\u044F\\\\DEV\\\\react\\\\fond-bsp\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./App.module.scss\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Nav from \"./components/Nav/Nav\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport MainPageContainer from \"./components/MainPage/MainPageContainer\";\nimport Toggle from \"./Common/Preloader/Toggle/Toggle\";\nimport NarcotisContainer from \"./components/Narcotics/NarcoticasContainer\";\nimport store from \"./redux/state\";\nimport BookLectureContainer from \"./components/BookLectureContainer/BookLectureContainer\";\nimport { BrowserView, MobileView } from \"react-device-detect\";\nimport NavBurger from \"./components/NavBurger/NavBurger\";\nimport FaqPageContainer from \"./components/FaqPage/FaqPageContainer\"; // const App123 = (props) => {\n//     return (\n//         <BrowserRouter>\n//             <div className={classes.app}>\n//                 <BrowserView viewClassName={classes.app_wrapper_header}>\n//                     {/* <div className={classes.app_wrapper_header}>\n//                         <Header />\n//                     </div> */}\n//                         <Header />\n//                 </BrowserView>\n//                 <div className={classes.app_wrapper}>\n//                     <div className={classes.app_wrapper_nav}>\n//                         <MobileView viewClassName={classes.mobileBurger}>\n//                             <NavBurger store={store}/>\n//                         </MobileView>\n//                         <BrowserView viewClassName={classes.browserNav}>\n//                             <Nav store={store} />\n//                             <Toggle\n//                                 render={({ on, Toggle }) => (\n//                                     <div className={classes.app_wrapper_toggle}>\n//                                         {/* <button onClick={Toggle}>k</button> */}\n//                                         {on && <Nav />}\n//                                     </div>\n//                                 )}\n//                             />\n//                         </BrowserView>\n//                     </div>\n//                     <div className={classes.app_wrapper_content}>\n//                         <Switch>\n//                             <Route\n//                                 path=\"/main\"\n//                                 render={() => <MainPageContainer store={store} />}\n//                             />\n//                             <Route\n//                                 path=\"/faq\"\n//                                 render={() => <FaqPageContainer store={store} />}\n//                             />\n//                             <Route\n//                                 path=\"/narcotics\"\n//                                 render={() => <NarcotisContainer store={store} />}\n//                             />\n//                             <Route\n//                                 path=\"/book-a-lecture\"\n//                                 render={() => <BookLectureContainer store={store} />}\n//                             />\n//                             <Route render={() => <MainPageContainer store={store} />}\n//                             />\n//                         </Switch>\n//                     </div>\n//                 </div>\n//                 <BrowserView viewClassName={classes.browserFooter}>\n//                     <Footer/>\n//                 </BrowserView>\n//             </div>\n//         </BrowserRouter>\n//     );\n// };\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  render() {\n    console.log(this.state.data);\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.app,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(BrowserView, {\n      viewClassName: classes.app_wrapper_header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.app_wrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.app_wrapper_nav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(MobileView, {\n      viewClassName: classes.mobileBurger,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(NavBurger, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(BrowserView, {\n      viewClassName: classes.browserNav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Toggle, {\n      render: ({\n        on,\n        Toggle\n      }) => React.createElement(\"div\", {\n        className: classes.app_wrapper_toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, on && React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.app_wrapper_content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/main\",\n      render: () => React.createElement(MainPageContainer, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/faq\",\n      render: () => React.createElement(FaqPageContainer, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/narcotics\",\n      render: () => React.createElement(NarcotisContainer, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/book-a-lecture\",\n      render: () => React.createElement(BookLectureContainer, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: () => React.createElement(MainPageContainer, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })))), React.createElement(BrowserView, {\n      viewClassName: classes.browserFooter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["C:/Users/Панацея/DEV/react/fond-bsp/client/src/App.js"],"names":["React","Component","classes","Header","Footer","Nav","Route","BrowserRouter","Switch","MainPageContainer","Toggle","NarcotisContainer","store","BookLectureContainer","BrowserView","MobileView","NavBurger","FaqPageContainer","App","state","data","callBackendAPI","response","fetch","body","json","status","Error","message","componentDidMount","then","res","setState","express","catch","err","console","log","render","app","app_wrapper_header","app_wrapper","app_wrapper_nav","mobileBurger","browserNav","on","app_wrapper_toggle","app_wrapper_content","browserFooter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from \"./App.module.scss\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Nav from \"./components/Nav/Nav\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport MainPageContainer from \"./components/MainPage/MainPageContainer\";\nimport Toggle from \"./Common/Preloader/Toggle/Toggle\";\nimport NarcotisContainer from \"./components/Narcotics/NarcoticasContainer\";\nimport store from \"./redux/state\";\nimport BookLectureContainer from \"./components/BookLectureContainer/BookLectureContainer\";\nimport { BrowserView,MobileView} from \"react-device-detect\";\nimport NavBurger from \"./components/NavBurger/NavBurger\";\nimport FaqPageContainer from \"./components/FaqPage/FaqPageContainer\";\n\n// const App123 = (props) => {\n//     return (\n//         <BrowserRouter>\n//             <div className={classes.app}>\n//                 <BrowserView viewClassName={classes.app_wrapper_header}>\n//                     {/* <div className={classes.app_wrapper_header}>\n//                         <Header />\n//                     </div> */}\n//                         <Header />\n//                 </BrowserView>\n//                 <div className={classes.app_wrapper}>\n//                     <div className={classes.app_wrapper_nav}>\n//                         <MobileView viewClassName={classes.mobileBurger}>\n//                             <NavBurger store={store}/>\n//                         </MobileView>\n//                         <BrowserView viewClassName={classes.browserNav}>\n//                             <Nav store={store} />\n//                             <Toggle\n//                                 render={({ on, Toggle }) => (\n//                                     <div className={classes.app_wrapper_toggle}>\n//                                         {/* <button onClick={Toggle}>k</button> */}\n//                                         {on && <Nav />}\n//                                     </div>\n//                                 )}\n//                             />\n//                         </BrowserView>\n//                     </div>\n//                     <div className={classes.app_wrapper_content}>\n//                         <Switch>\n//                             <Route\n//                                 path=\"/main\"\n//                                 render={() => <MainPageContainer store={store} />}\n//                             />\n//                             <Route\n//                                 path=\"/faq\"\n//                                 render={() => <FaqPageContainer store={store} />}\n//                             />\n//                             <Route\n//                                 path=\"/narcotics\"\n//                                 render={() => <NarcotisContainer store={store} />}\n//                             />\n//                             <Route\n//                                 path=\"/book-a-lecture\"\n//                                 render={() => <BookLectureContainer store={store} />}\n//                             />\n//                             <Route render={() => <MainPageContainer store={store} />}\n//                             />\n//                         </Switch>\n//                     </div>\n//                 </div>\n                \n//                 <BrowserView viewClassName={classes.browserFooter}>\n//                     <Footer/>\n\n//                 </BrowserView>\n//             </div>\n//         </BrowserRouter>\n//     );\n// };\n\n\nclass App extends Component {\n    \n    state = {\n        data: null\n    };\n\n    componentDidMount() {\n        // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n        .then(res => this.setState({ data: res.express }))\n        .catch(err => console.log(err));\n    }\n        // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n    callBackendAPI = async () => {\n        const response = await fetch('/express_backend');\n        const body = await response.json();\n\n        if (response.status !== 200) {\n            throw Error(body.message) \n        }\n        return body;\n    };\n    \n    render() {\n        console.log(this.state.data);\n        return (\n            <BrowserRouter>\n                <div className={classes.app}>\n                    <BrowserView viewClassName={classes.app_wrapper_header}>\n                        {/* <div className={classes.app_wrapper_header}>\n                            <Header />\n                        </div> */}\n                            <Header />\n                    </BrowserView>\n                    <div className={classes.app_wrapper}>\n                        <div className={classes.app_wrapper_nav}>\n                            <MobileView viewClassName={classes.mobileBurger}>\n                                <NavBurger store={store}/>\n                            </MobileView>\n                            <BrowserView viewClassName={classes.browserNav}>\n                                <Nav store={store} />\n                                <Toggle\n                                    render={({ on, Toggle }) => (\n                                        <div className={classes.app_wrapper_toggle}>\n                                            {/* <button onClick={Toggle}>k</button> */}\n                                            {on && <Nav />}\n                                        </div>\n                                    )}\n                                />\n                            </BrowserView>\n                        </div>\n                        <div className={classes.app_wrapper_content}>\n                            <Switch>\n                                <Route\n                                    path=\"/main\"\n                                    render={() => <MainPageContainer store={store} />}\n                                />\n                                <Route\n                                    path=\"/faq\"\n                                    render={() => <FaqPageContainer store={store} />}\n                                />\n                                <Route\n                                    path=\"/narcotics\"\n                                    render={() => <NarcotisContainer store={store} />}\n                                />\n                                <Route\n                                    path=\"/book-a-lecture\"\n                                    render={() => <BookLectureContainer store={store} />}\n                                />\n                                <Route render={() => <MainPageContainer store={store} />}\n                                />\n                            </Switch>\n                        </div>\n                    </div>\n                    \n                    <BrowserView viewClassName={classes.browserFooter}>\n                        <Footer/>\n                    </BrowserView>\n                    {/* <p className=\"App-intro\">{this.state.data}</p> */}\n                </div>\n            </BrowserRouter>\n        );\n    }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}